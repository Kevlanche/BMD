package com.kevlanche.beaversmustdie;

import com.badlogic.gdx.math.MathUtils;
import com.badlogic.gdx.physics.box2d.Body;
import com.badlogic.gdx.physics.box2d.BodyDef;
import com.badlogic.gdx.physics.box2d.CircleShape;
import com.badlogic.gdx.physics.box2d.FixtureDef;
import com.badlogic.gdx.physics.box2d.World;
import com.badlogic.gdx.physics.box2d.BodyDef.BodyType;

public class Island extends PhysicsActor {

	public Island(World world, float angleDegrees) {

		BodyDef bd = new BodyDef();
		bd.type = BodyType.StaticBody;
		bd.position.set( MathUtils.cosDeg(angleDegrees)*Water.WATER_RADIUS, MathUtils.sinDeg(angleDegrees)*Water.WATER_RADIUS);
		bd.angle = MathUtils.radiansToDegrees * angleDegrees;
		
		Body body = world.createBody(bd);
		
		FixtureDef fd = new FixtureDef();
		fd.density = 0.0f;
		fd.filter.categoryBits = Collision.ISLAND;
		fd.filter.maskBits = Collision.SHARK | Collision.ISLAND;
		
		fd.restitution = 0.0f;
		fd.friction = 0.0f;
		
		CircleShape ps = new CircleShape();
		ps.setRadius(0.5f);
		fd.shape = ps;
		
		body.createFixture(fd);
		
		ps.dispose();
		
		super.initPhysicsBody(body);
		
	}
}
